{"version":3,"sources":["assets/images/wheel.png","assets/images/spin.png","assets/images/loading.gif","assets/images/tiker.png","assets/sounds/tick.mp3","components/Message/Congrats.js","components/Message/UsedSpin.js","components/Message/ExpiredCampaign.js","components/Message/TechnicalError.js","components/MessagesContainer/MessagesContainer.js","common/configuration.js","components/Wheel/Wheel.js","App.js","reportWebVitals.js","index.js"],"names":["Congrats","className","UsedSpin","ExpiredCampaign","TechnicalError","ReturnMessage","messageStatus","MessagesContainer","CONFIG","Wheel","params","useState","setMessageStatus","loading","setLoading","wheel","useRef","tickTrigger","Audio","tickSound","useEffect","document","querySelector","addEventListener","classList","remove","tick","play","add","startWheel","range","ANIMATION_ROTATION","randomChosenPackage","current","style","transition","transform","setInterval","rest","el","st","window","getComputedStyle","tm","getPropertyValue","values","split","angle","Math","round","atan2","PI","getCurrentRotation","setTimeout","clearInterval","ANIMATION_DURATION","src","loadingImg","alt","wheelImg","ref","spinImg","onClick","ticker","App","setParams","queryString","location","search","urlParams","URLSearchParams","guid","get","username","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b0bfbd54.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/wheel.369afc68.png\";","export default __webpack_public_path__ + \"static/media/spin.4295bf12.png\";","export default __webpack_public_path__ + \"static/media/loading.b0997f97.gif\";","export default __webpack_public_path__ + \"static/media/tiker.02fd30c0.png\";","export default __webpack_public_path__ + \"static/media/tick.2e9e79dd.mp3\";","import './Message.css';\r\n\r\nconst Congrats = () => {\r\n    return(\r\n        <div className=\"message technical-error\">\r\n            <p> Congrats </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Congrats","import './Message.css';\r\n\r\nconst UsedSpin = () => {\r\n    return(\r\n        <div className=\"message technical-error\">\r\n            <p> Used spin </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsedSpin","import './Message.css';\r\n\r\nconst ExpiredCampaign = () => {\r\n    return(\r\n        <div className=\"message technical-error\">\r\n            <p> Expired campaign </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpiredCampaign","import './Message.css';\r\n\r\nconst TechnicalError = () => {\r\n    return(\r\n        <div className=\"message technical-error\">\r\n            <p> Technical Error </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TechnicalError","import './MessagesContainer.css'\r\nimport Congrats from '../Message/Congrats'\r\nimport UsedSpin from '../Message/UsedSpin'\r\nimport ExpiredCampaign from '../Message/ExpiredCampaign'\r\nimport TechnicalError from '../Message/TechnicalError'\r\n\r\n\r\nconst ReturnMessage = ({messageStatus}) => {\r\n    switch (messageStatus) {\r\n        case \"Congrats\":\r\n            return <Congrats/>\r\n        case \"UsedSpin\":\r\n            return <UsedSpin/>\r\n        case \"TechnicalError\":\r\n            return <TechnicalError/>\r\n        case \"ExpiredCampaign\":\r\n            return <ExpiredCampaign/>\r\n        default:\r\n            return <div></div>\r\n        }\r\n}\r\n\r\nconst MessagesContainer = ({messageStatus}) => {\r\n    return(\r\n        <div className=\"messages-container messageAnimation\">\r\n            <ReturnMessage messageStatus={messageStatus}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessagesContainer","export const CONFIG = { \r\n    PRIZES_COUNTER: 5,\r\n}\r\n\r\n\r\n\r\n//TO ADD\r\n//ticker.visible\r\n//ticker.animate\r\n//nodes.visible","import { useRef, useState, useEffect } from 'react';\r\nimport './Wheel.css';\r\nimport anime from 'animejs/lib/anime.es.js';\r\n\r\n//Assets\r\nimport wheelImg from '../../assets/images/wheel.png';\r\nimport spinImg from '../../assets/images/spin.png';\r\nimport loadingImg from '../../assets/images/loading.gif';\r\nimport ticker from '../../assets/images/tiker.png';\r\nimport tickSound from '../../assets/sounds/tick.mp3';\r\n\r\n//Components\r\nimport MessagesContainer from '../MessagesContainer/MessagesContainer';\r\n\r\n//Configuration\r\nimport { CONFIG } from '../../common/configuration';\r\n\r\n\r\n\r\nfunction Wheel({params}) {\r\n    const [messageStatus, setMessageStatus] = useState(\"none\");\r\n    const [loading, setLoading] = useState(false);\r\n    const wheel = useRef(null);\r\n    const tickTrigger = new Audio(tickSound);\r\n    \r\n    \r\n    useEffect(function(){\r\n        //Removes the ticker's animation when it ends, so it can be triggered again\r\n        document.querySelector(\".ticker\").addEventListener(\"animationend\", function () {\r\n            document.querySelector(\".ticker\").classList.remove(\"ticker-animation\")\r\n        });\r\n    }, [])\r\n\r\n    const tick = () => {\r\n        // console.log(\"Tick\");\r\n        tickTrigger.play();\r\n        document.querySelector(\".ticker\").classList.add(\"ticker-animation\");\r\n    }\r\n\r\n    const getCurrentRotation = (el) => {\r\n        var st = window.getComputedStyle(el, null);\r\n        var tm = st.getPropertyValue(\"-webkit-transform\") ||\r\n                 st.getPropertyValue(\"-moz-transform\") ||\r\n                 st.getPropertyValue(\"-ms-transform\") ||\r\n                 st.getPropertyValue(\"-o-transform\") ||\r\n                 st.getPropertyValue(\"transform\") ||\r\n                 \"none\";\r\n        if (tm != \"none\") {\r\n          var values = tm.split('(')[1].split(')')[0].split(',');\r\n          /*\r\n          a = values[0];\r\n          b = values[1];\r\n          angle = Math.round(Math.atan2(b,a) * (180/Math.PI));\r\n          */\r\n          //return Math.round(Math.atan2(values[1],values[0]) * (180/Math.PI)); //this would return negative values the OP doesn't wants so it got commented and the next lines of code added\r\n          var angle = Math.round(Math.atan2(values[1],values[0]) * (180/Math.PI));\r\n          return (angle < 0 ? angle + 360 : angle); //adding 360 degrees here when angle < 0 is equivalent to adding (2 * Math.PI) radians before\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    const startWheel = () => {\r\n        const range = 360/CONFIG.PRIZES_COUNTER; \r\n        const ANIMATION_DURATION = 8; \r\n        const ANIMATION_ROTATION = 720 + params.randomChosenPackage * range;\r\n\r\n\r\n        wheel.current.style.transition = `transform ${ANIMATION_DURATION}s ease-out 0s`;\r\n        wheel.current.style.transform = `rotate(${ANIMATION_ROTATION}deg)`;\r\n\r\n\r\n        const tickTrigger = setInterval(function() {\r\n            let angle = getCurrentRotation(wheel.current)\r\n            // console.log(\"Angle: \", angle)\r\n            // console.log(\"angle%range\", angle%range)\r\n            // console.log(\"range/2\", range/2)\r\n            \r\n            let bottomRange = range/2 - 4;\r\n            let topRange = range/2 + 4;\r\n            let rest = angle%range;\r\n\r\n            if( bottomRange <= rest && rest <= topRange ) {\r\n                tick();\r\n            }\r\n        }, 10);\r\n\r\n\r\n        setTimeout(function(){\r\n            setMessageStatus(\"Congrats\");\r\n            window.clearInterval(tickTrigger);\r\n        }, ANIMATION_DURATION*1000);\r\n\r\n    }\r\n\r\n    const requestClaim = () => {\r\n        setLoading(true)\r\n\r\n        setTimeout(function(){\r\n            setLoading(false)\r\n            startWheel()\r\n        }, 1000);\r\n    }\r\n\r\n    const play = () => { \r\n        requestClaim();\r\n    } \r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    const startWheelAnimeJS = () => {\r\n    //     let stopDeg = 720;\r\n    //     let tickRange = 360/CONFIG.PRIZES_COUNTER;\r\n\r\n    //     let range = 360/CONFIG.PRIZES_COUNTER;\r\n\r\n\r\n    //     const anim = anime({\r\n    //         targets: wheel.current,\r\n    //         rotate: '1080deg',\r\n    //         duration: 8000,\r\n    //         easing: \"easeOutQuad\",\r\n    //         update: function(anim) {\r\n    //             let angle = anim.progress*1080/100;\r\n    //             angle = Math.trunc(angle)\r\n    //             console.log(\"Animation progress: \",anim.progress)\r\n    //             console.log(\"Current angle: \", anim.progress*720/100)\r\n                \r\n\r\n    //             if( range/2 - 2 <= angle%range && angle%range <= range/2 + 2) {\r\n    //                 tick();\r\n    //             }\r\n    //             // let currentDeg = anim.progress*720/100;\r\n    //             // console.log(Math.round(currentDeg % tickRange))\r\n    //             // console.log(tickRange/2 - 3)\r\n\r\n    //             // if(Math.round(currentDeg % tickRange) === tickRange/2 - 3){\r\n    //             //     console.log(\"TICK\")\r\n    //             //     tick();\r\n    //             // }\r\n\r\n    //           }\r\n    //     });\r\n    \r\n\r\n    }\r\n\r\n    return(\r\n        <div className=\"wheel-container\">\r\n            {(messageStatus === \"none\") ? \"\" : <MessagesContainer messageStatus={messageStatus}/>}\r\n            {(loading) ? <img className=\"loading\" src={loadingImg} alt=\"loading\"/> : \"\" }\r\n\r\n            <img className=\"wheel\" src={wheelImg} alt=\"wheel\" ref={wheel}/>\r\n            <img className=\"spin\" src={spinImg} alt=\"spin\" onClick={play}/>\r\n            <div className=\"ticker-container\">\r\n                <img className=\"ticker\" src={ticker} alt=\"ticker\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wheel","import { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Wheel from './components/Wheel/Wheel';\r\n\r\nfunction App() {\r\n  const [params, setParams] = useState({})\r\n\r\n  useEffect(() => {\r\n    const queryString = window.location.search\r\n    const urlParams = new URLSearchParams(queryString)\r\n    \r\n    setParams({...params, \r\n      guid: urlParams.get('guid'),\r\n      username: urlParams.get('username'),\r\n      randomChosenPackage: urlParams.get('RandomChosenPackage')\r\n    })\r\n  }, [])\r\n\r\n  //TO DO: Handle audio here\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Wheel params={params}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}